<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Os on Not today...</title>
    <link>http://ixday.github.io/categories/os/</link>
    <description>Recent content in Os on Not today...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Feb 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://ixday.github.io/categories/os/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Linux Mint</title>
      <link>http://ixday.github.io/post/linux_mint/</link>
      <pubDate>Mon, 22 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>http://ixday.github.io/post/linux_mint/</guid>
      <description>

&lt;p&gt;After a long journey, I finally found the distribution which fits
all my need: &lt;strong&gt;Linux Mint Debian Edition&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;why&#34;&gt;Why ?&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;It is based on debian a distribution which I really like (and not Ubuntu).&lt;/li&gt;
&lt;li&gt;The default tilling (similar to W7) is really comfortable.&lt;/li&gt;
&lt;li&gt;Lot of configuration can be done for shortcuts.&lt;/li&gt;
&lt;li&gt;Support for &lt;code&gt;systemd&lt;/code&gt; (Yay \o/).&lt;/li&gt;
&lt;li&gt;Beautiful UI out of the box (which I didn&amp;rsquo;t have with TWM).&lt;/li&gt;
&lt;li&gt;And a lot more&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;

&lt;p&gt;As I am on Macbook (once upon a time, I was young and dumb), I need a
particular configuration of the partitions for the installation.&lt;/p&gt;

&lt;p&gt;Here is how my HDD is partitionned:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First, the &lt;code&gt;/boot/efi&lt;/code&gt; partition with the boot flag is about 200MB&lt;/li&gt;
&lt;li&gt;Then the Macintosh partition, in hfs+&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;/boot&lt;/code&gt;, partition, as I will use LVM I need to have an external
partition to hold the initram images, with an ext4 filesystem.&lt;/li&gt;
&lt;li&gt;Finally, the LVM partition which is subdivided in two partitions:

&lt;ul&gt;
&lt;li&gt;lvm_root: which will hold the root filesystem&lt;/li&gt;
&lt;li&gt;lvm_swap: my system swap&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mount the partitions in the right order into &lt;code&gt;/mnt/target&lt;/code&gt;, follow the
expert disk partioning in the installation wizard.&lt;/p&gt;

&lt;p&gt;Install LVM into the new system (with chroot), then fillup the fstab file
to look similar to something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;/dev/mapper/vg_ssd-lv_root  /	    ext4	rw,relatime,discard,data&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ordered  &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 1
/dev/mapper/vg_ssd-lv_swap  none	swap	defaults                          0	0

proc          /proc	    proc  defaults        0	0
/dev/sda3     /boot	    ext4  defaults        &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 2
/dev/sda2     /boot/efi vfat  defaults        &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;

&lt;p&gt;Now that we have a running distribution there is some small details to fix.
Here are some piece of configuration I needed to fix to have a satisfying
install.&lt;/p&gt;

&lt;h3 id=&#34;chromium-as-default&#34;&gt;Chromium as default&lt;/h3&gt;

&lt;p&gt;First, I want to use chromium as the default browser, simply install it with
the package manager, then just run the &lt;code&gt;Preferred Application&lt;/code&gt; program to
setup the default.&lt;/p&gt;

&lt;h3 id=&#34;microphone-issue&#34;&gt;Microphone issue&lt;/h3&gt;

&lt;p&gt;As I use a Macbook I have an issue with my mic by default. To fix that, just
create the &lt;code&gt;/etc/modprobe.d/alsa-base.conf&lt;/code&gt; file, and just past the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;options snd-hda-intel model=mbp101 index=1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Reboot, and tadaaa!&lt;/p&gt;

&lt;h3 id=&#34;systemd&#34;&gt;Systemd&lt;/h3&gt;

&lt;p&gt;By default, on LMDE Betsy (my current installation), the init system is
still sysvinit.
I really like systemd and good news the skeleton of it is already present,
so we just have to explain the system to change.
And&amp;hellip; it is simpler as I firstly thought, because there is a package for
that: &lt;code&gt;systemd-sysv&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Just run the installation and you will be good&lt;/p&gt;

&lt;h3 id=&#34;powertop&#34;&gt;Powertop&lt;/h3&gt;

&lt;p&gt;As systemd is already installed, here is the service file:
&lt;code&gt;/etc/systemd/system/powertop.service&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;k&#34;&gt;[Unit]&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;Description&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;Powertop tunings&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;[Service]&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;oneshot&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;ExecStart&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;/usr/sbin/powertop --auto-tune&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;Environment&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;TERM=xterm&amp;quot;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;[Install]&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;WantedBy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;multi-user.target&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I had to install &lt;code&gt;xterm&lt;/code&gt; in order to make the service work, because
powertop needs a shell at runtime to perform the auto-tune statement.&lt;/p&gt;

&lt;p&gt;It is a systemd service which will be loaded at startup, so just enable it:
&lt;code&gt;systemctl enable powertop&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;skype&#34;&gt;Skype&lt;/h3&gt;

&lt;p&gt;This one is easy, but I also want my beautiful cinnamon skin on it ;)&lt;/p&gt;

&lt;p&gt;Just download and install the .deb file from
&lt;a href=&#34;http://www.skype.com/en/download-skype/skype-for-computer/&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enable multiple architecture if you are running x86_64 distribution:
&lt;code&gt;dpkg --add-architecture i386&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And now install some complementary packages:
&lt;code&gt;apt-get install gtk2-engines-murrine:i386 gtk2-engines-pixbuf:i386&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;last-word&#34;&gt;Last word&lt;/h2&gt;

&lt;p&gt;This article will evolve to fit the latest change on my system, stay tuned!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Unable to find LVM volume... with LVM on top of Luks</title>
      <link>http://ixday.github.io/post/unable_to_find_lvm_volume_with_lvm_on_top_of_luks/</link>
      <pubDate>Wed, 19 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ixday.github.io/post/unable_to_find_lvm_volume_with_lvm_on_top_of_luks/</guid>
      <description>&lt;p&gt;Following &lt;a href=&#34;{filename}/2015-08-18.debian-install-2.md&#34;&gt;this article&lt;/a&gt;
I have LVM on top of Luks for my system.
When I boot I encounter the following message:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;  Volume group &amp;quot;vg_ssd&amp;quot; not found
  Skipping volume group vg_ssd
Unable to find LVM volume vg_ssd/lv_root
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It appears that LVM is started before I open the crypted partition and display this error.
To fix this we will manipulate the initramfs \o/.&lt;/p&gt;

&lt;p&gt;The issue is in the file &lt;code&gt;/usr/share/initramfs-tools/scripts/local-top/cryptroot&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;which starts like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c&#34;&gt;#!/bin/sh&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;PREREQ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;cryptroot-prepare&amp;quot;&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;# Standard initramfs preamble&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#&lt;/span&gt;
prereqs&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;c&#34;&gt;# Make sure that cryptroot is run last in local-top&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; req in &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;dirname &lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;/*&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
		&lt;span class=&#34;nv&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;##*/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$script&lt;/span&gt; !&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; cryptroot &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
			&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$script&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt; in
prereqs&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
	prereqs
	&lt;span class=&#34;nb&#34;&gt;exit &lt;/span&gt;0
	&lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;esac&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;# source for log_*_msg() functions, see LP: #272301&lt;/span&gt;
. /scripts/functions
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Line 10 to 16 it says that cryptroot is run last, in the same directory there is a &lt;code&gt;lvm2&lt;/code&gt;
script. So, what is happening is that cryptroot is launched after lvm2 which is not what we want.
To fix this remove lines 10 to 16 and replace them with &lt;code&gt;echo &amp;quot;$PREREQ&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c&#34;&gt;#!/bin/sh&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;PREREQ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;cryptroot-prepare&amp;quot;&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;# Standard initramfs preamble&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#&lt;/span&gt;
prereqs&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PREREQ&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt; in
prereqs&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
	prereqs
	&lt;span class=&#34;nb&#34;&gt;exit &lt;/span&gt;0
	&lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;esac&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;# source for log_*_msg() functions, see LP: #272301&lt;/span&gt;
. /scripts/functions
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;At the init step files are taken in alphabetical order so &lt;code&gt;cryptroot&lt;/code&gt; will come before
&lt;code&gt;lvm2&lt;/code&gt; (c &amp;lt; l).&lt;/p&gt;

&lt;p&gt;Now we just regenerate the initrd files: &lt;code&gt;update-initramfs -u -k all&lt;/code&gt; reboot and voila, it works :D&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Debian Install 3</title>
      <link>http://ixday.github.io/post/debian_install_3/</link>
      <pubDate>Tue, 18 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ixday.github.io/post/debian_install_3/</guid>
      <description>

&lt;p&gt;Today I want to install debian on my personal server.
And I want to crypt the FS using Luks, and add LVM on top.&lt;/p&gt;

&lt;p&gt;I want it to look like that (like this scheme, a lot of reference
come from the &lt;a href=&#34;https://wiki.archlinux.org/index.php/Dm-crypt/Encrypting_an_entire_system&#34;&gt;arch wiki&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;+-----------------------------------------------+ +----------------+
|Logical volume1        | Logical volume2       | |                |
|/dev/vg_ssd/lv_swap    | /dev/vg_ssd/lv_root   | | Boot partition |
|_ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _| |                |
|                                               | |                |
|        LUKS encrypted partition               | |                |
|               /dev/sda2                       | |   /dev/sda1    |
+-----------------------------------------------+ +----------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;prepare-disks&#34;&gt;Prepare disks&lt;/h2&gt;

&lt;p&gt;I use parted for this configuration, I left 1MB at the start of the device
to be compliant with &lt;code&gt;parted &amp;lt;disk&amp;gt; align-check optimal &amp;lt;partition&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;apt install cryptsetup lvm2

parted /dev/sda mkpart primary 1MB 201MB &lt;span class=&#34;c&#34;&gt;# boot partition&lt;/span&gt;
parted /dev/sda mkpart primary 201MB 100% &lt;span class=&#34;c&#34;&gt;# lvm partition&lt;/span&gt;
parted /dev/sda toggle &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; boot
parted /dev/sda toggle &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; lvm

cryptsetup -c aes-xts-plain -y -s &lt;span class=&#34;m&#34;&gt;512&lt;/span&gt; luksFormat /dev/sda2
&lt;span class=&#34;c&#34;&gt;# enter passphrase&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;# this command will open the crypted /dev/sda2 partition and link it to ssd in /dev/mapper&lt;/span&gt;
cryptsetup luksOpen /dev/sda2 ssd

lvm pvcreate /dev/mapper/ssd
lvm vgcreate vg_ssd /dev/mapper/ssd

lvm lvcreate -L 4GB -n swap vg_ssd
lvm lvcreate -l 100%FREE -n root vg_ssd

&lt;span class=&#34;c&#34;&gt;# now format the partitions&lt;/span&gt;
mkfs.ext4 /dev/sda1 &lt;span class=&#34;c&#34;&gt;# boot partition&lt;/span&gt;
mkfs.ext4 /dev/mapper/vg_ssd-lv_root
mkswap /dev/mapper/vg_ssd-lv_swap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;prepare-base-system&#34;&gt;Prepare base system&lt;/h2&gt;

&lt;p&gt;In order to prepare the base system I will use the &lt;code&gt;debootstrap&lt;/code&gt; tool,
which will take care of creating base files. Then I will &lt;code&gt;chroot&lt;/code&gt; in the new
system in order to setup packages and boot initialisation&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c&#34;&gt;# mount new filesystem and debootstrap&lt;/span&gt;
mount /dev/mapper/&amp;lt;vg_name&amp;gt;-root /mnt
mkdir /mnt/boot
mount /dev/sda1 /mnt/boot

debootstrap --arch&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;amd64 stable /mnt

&lt;span class=&#34;c&#34;&gt;# copy somefiles&lt;/span&gt;
cp /etc/resolv.conf /mnt/etc/
cp /etc/network/interfaces /mnt/etc/network

&lt;span class=&#34;c&#34;&gt;# bind and chroot&lt;/span&gt;
mount -o &lt;span class=&#34;nb&#34;&gt;bind&lt;/span&gt; /dev /mnt/dev
mount -o &lt;span class=&#34;nb&#34;&gt;bind&lt;/span&gt; /dev/pts /mnt/dev/pts
mount -o &lt;span class=&#34;nb&#34;&gt;bind&lt;/span&gt; /proc /mnt/proc
mount -o &lt;span class=&#34;nb&#34;&gt;bind&lt;/span&gt; /run /mnt/run
mount -o &lt;span class=&#34;nb&#34;&gt;bind&lt;/span&gt; /sys /mnt/sys

chroot /mnt/ /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;

&lt;p&gt;First install vim! &lt;code&gt;apt-get install vim&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then create the fstab file, I use the UUID notation for this part.
Basically, I run two commands in order to get the needed informations&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ls -l /dev/disks/by-uuid

total 0
lrwxrwxrwx &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; root root &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; Aug &lt;span class=&#34;m&#34;&gt;19&lt;/span&gt; 12:52 2dfb2c7a-e99b-4073-9267-8e517bc0ce82 -&amp;gt; ../../sda1
lrwxrwxrwx &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; root root &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; Aug &lt;span class=&#34;m&#34;&gt;19&lt;/span&gt; 13:09 59da986c-ef82-485e-bc8b-f36cc440273c -&amp;gt; ../../sda2
lrwxrwxrwx &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; root root &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; Aug &lt;span class=&#34;m&#34;&gt;19&lt;/span&gt; 12:53 de3c4d79-beb9-427e-9dea-d25726a5f492 -&amp;gt; ../../dm-2
lrwxrwxrwx &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; root root &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; Aug &lt;span class=&#34;m&#34;&gt;19&lt;/span&gt; 12:52 f7c9d9f4-671e-45be-97a9-be775196545e -&amp;gt; ../../dm-1
lrwxrwxrwx &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; root root &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; Aug &lt;span class=&#34;m&#34;&gt;19&lt;/span&gt; 12:40 fcc7394f-6865-4ac5-989a-f6c58dc129d5 -&amp;gt; ../../dm-0

ls -l /dev/mapper
total 0
crw------- &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; root root 10, &lt;span class=&#34;m&#34;&gt;236&lt;/span&gt; Aug &lt;span class=&#34;m&#34;&gt;19&lt;/span&gt; 12:37 control
lrwxrwxrwx &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; root root       &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt; Aug &lt;span class=&#34;m&#34;&gt;19&lt;/span&gt; 12:51 ssd -&amp;gt; ../dm-0
lrwxrwxrwx &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; root root       &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt; Aug &lt;span class=&#34;m&#34;&gt;19&lt;/span&gt; 12:52 vg_ssd-lv_root -&amp;gt; ../dm-2
lrwxrwxrwx &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; root root       &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt; Aug &lt;span class=&#34;m&#34;&gt;19&lt;/span&gt; 12:53 vg_ssd-lv_swap -&amp;gt; ../dm-1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which will give me the following /etc/fstab.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nv&#34;&gt;UUID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;de3c4d79-beb9-427e-9dea-d25726a5f492   /       ext4    defaults    &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;  1
&lt;span class=&#34;nv&#34;&gt;UUID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2dfb2c7a-e99b-4073-9267-8e517bc0ce82   /boot   ext4    defaults    &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;  2
&lt;span class=&#34;nv&#34;&gt;UUID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;f7c9d9f4-671e-45be-97a9-be775196545e   none    swap    defaults    &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;  0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Edit the /etc/apt/sources.list file to set up basic packages and update package list: &lt;code&gt;apt-get update&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;deb http://ftp.us.debian.org/debian stable main contrib non-free
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Install needed packages&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c&#34;&gt;# install the package&lt;/span&gt;
apt-get install locales console-data keyboard-configuration

&lt;span class=&#34;c&#34;&gt;# set the variables up, select the ones you want with space&lt;/span&gt;
dpkg-reconfigure locales

&lt;span class=&#34;c&#34;&gt;# setup password&lt;/span&gt;
passwd

&lt;span class=&#34;c&#34;&gt;# change hostname&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;suika&amp;quot;&lt;/span&gt; &amp;gt; /etc/hostname

apt-get install lvm2 cryptsetup

&lt;span class=&#34;c&#34;&gt;# this one is specific to my mothercard&lt;/span&gt;
apt-get install firmware-realtek
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;grub&#34;&gt;Grub&lt;/h2&gt;

&lt;p&gt;Now we want to make the new system bootable, to perform this the system needs a kernel
&lt;code&gt;apt-get install linux-image-amd64&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Set up the /etc/crypttab file, which will tell how to map the crypted partition&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c&#34;&gt;# &amp;lt;target name&amp;gt; &amp;lt;source device&amp;gt;         &amp;lt;key file&amp;gt;      &amp;lt;options&amp;gt;&lt;/span&gt;
ssd             /dev/sda2               none            luks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Install grub on /dev/sda (on disk, not on partition) &lt;code&gt;apt-get install grub2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Load keyboard on initramfs in order to avoid keyboard layout collision when opening luks volume.&lt;/p&gt;

&lt;p&gt;In file &lt;code&gt;/etc/initramfs-tools/initramfs.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;# KEYMAP: [ y | n ]&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;# Charger une configuration de clavier à l&amp;#39;étape d&amp;#39;initramfs.&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;KEYMAP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Update initramfs &lt;code&gt;update-initramfs -u&lt;/code&gt; to apply change on initrd.&lt;/p&gt;

&lt;h2 id=&#34;the-end&#34;&gt;The end!&lt;/h2&gt;

&lt;p&gt;Exit the &lt;code&gt;chroot&lt;/code&gt; unmount partitions and reboot on your new fresh installed system.&lt;/p&gt;

&lt;p&gt;If at startup you get an error message like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;  Volume group &amp;quot;vg_ssd&amp;quot; not found
  Skipping volume group vg_ssd
Unable to find LVM volume vg_ssd/lv_root
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can look at &lt;a href=&#34;{filename}/2015-08-19.unable-to-find-lvm-volume-with-lvm-on-top-of-luks.md&#34;&gt;this article&lt;/a&gt; which explain how to fix this issue&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Debian install 2</title>
      <link>http://ixday.github.io/post/debian_install_2/</link>
      <pubDate>Thu, 14 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ixday.github.io/post/debian_install_2/</guid>
      <description>

&lt;p&gt;After many days of configuration, I finally complete the installation of my
perfect &amp;ldquo;workstation&amp;rdquo; ;).&lt;/p&gt;

&lt;h2 id=&#34;source-list&#34;&gt;source.list&lt;/h2&gt;

&lt;p&gt;I have to directory for this, first the
&lt;a href=&#34;https://github.com/IxDay/config_files/tree/new_conf/preferences.d&#34;&gt;preferences&lt;/a&gt;,
then the
&lt;a href=&#34;https://github.com/IxDay/config_files/tree/new_conf/source.list.d&#34;&gt;sources.list&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Just run an &lt;code&gt;aptitude update&lt;/code&gt;, and you will some missing gpg keys, now run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;apt-key adv --recv-keys --keyserver keyserver.ubuntu.com &amp;lt;key_number&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To have your keys installed.&lt;/p&gt;

&lt;h2 id=&#34;sudo&#34;&gt;sudo&lt;/h2&gt;

&lt;p&gt;A sudo file is important in order to correctly manage a computer, a simple
&lt;code&gt;aptitude install sudo&lt;/code&gt; will give you the tool.&lt;/p&gt;

&lt;p&gt;Then uncomment the following line&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c&#34;&gt;# Allow members of group sudo to execute any command&lt;/span&gt;
%sudo   &lt;span class=&#34;nv&#34;&gt;ALL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=(&lt;/span&gt;ALL:ALL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ALL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then add your user to the group sudo &lt;code&gt;gpasswd -a &amp;lt;your_user&amp;gt; sudo&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;install-all-the-packages-o&#34;&gt;install all the packages o/&lt;/h2&gt;

&lt;p&gt;Here is the list of packages I install by default, you can click on them to go
to the proper section
* &lt;a href=&#34;#shell&#34;&gt;rxvt-unicode-256color&lt;/a&gt;
* &lt;a href=&#34;#shell&#34;&gt;zsh&lt;/a&gt;
* &lt;a href=&#34;#vim&#34;&gt;vim-gtk&lt;/a&gt;
* &lt;a href=&#34;#xserver-i3-gtk&#34;&gt;xserver-xorg&lt;/a&gt;, &lt;a href=&#34;#xserver-i3-gtk&#34;&gt;i3&lt;/a&gt;
* &lt;a href=&#34;#xserver-i3-gtk&#34;&gt;fonts-droid&lt;/a&gt;, &lt;a href=&#34;#theming&#34;&gt;feh&lt;/a&gt;
* &lt;a href=&#34;#xserver-i3-gtk&#34;&gt;gtk2-engine-murrine&lt;/a&gt;,
&lt;a href=&#34;#xserver-i3-gtk&#34;&gt;gtk2-engine-pixbuf&lt;/a&gt;, &lt;a href=&#34;#xserver-i3-gtk&#34;&gt;libgtk2.0-0&lt;/a&gt;,
&lt;a href=&#34;#xserver-i3-gtk&#34;&gt;libgtk-3-0&lt;/a&gt;
* &lt;a href=&#34;#notifications&#34;&gt;libnotify-bin&lt;/a&gt;, &lt;a href=&#34;#notifications&#34;&gt;dunst&lt;/a&gt;
* xclip, jq
* &lt;a href=&#34;#git&#34;&gt;git&lt;/a&gt;, &lt;a href=&#34;#git&#34;&gt;keychain&lt;/a&gt;
* &lt;a href=&#34;#google-chrome&#34;&gt;google-chrome-stable&lt;/a&gt;
* &lt;a href=&#34;#docker&#34;&gt;docker.io&lt;/a&gt;
*&lt;/p&gt;

&lt;h2 id=&#34;a-name-shell-a-shell&#34;&gt;&lt;a name=&#34;shell&#34;&gt;&lt;/a&gt; Shell&lt;/h2&gt;

&lt;p&gt;First thing first, a computer is not a real computer without a good shell.
So, I install zsh, then I change my default shell &lt;code&gt;chsh -s $(which zsh)&lt;/code&gt;, and
to finish &lt;a href=&#34;rxvt-unicode-256color&#34;&gt;Oh My Zsh&lt;/a&gt;. I have a custom
&lt;a href=&#34;https://github.com/IxDay/config_files/blob/new_conf/max.zsh-theme&#34;&gt;prompt&lt;/a&gt;
which is placed in &lt;code&gt;.oh-my-zsh/themes/&lt;/code&gt;. The promp is loaded in my
&lt;a href=&#34;https://github.com/IxDay/config_files/blob/new_conf/zshrc&#34;&gt;zshrc file&lt;/a&gt;
and some &lt;a href=&#34;https://github.com/IxDay/config_files/blob/new_conf/zshrc&#34;&gt;aliases&lt;/a&gt;
are sourced for convenience.&lt;/p&gt;

&lt;h2 id=&#34;a-name-vim-a-vim&#34;&gt;&lt;a name=&#34;vim&#34;&gt;&lt;/a&gt; Vim&lt;/h2&gt;

&lt;p&gt;I use vim for quite everything so I have some customization here.
I directly install the gtk version in order to have support for the clipboard
see &lt;a href=&#34;http://stackoverflow.com/questions/11489428/how-to-make-vim-paste-from-and-copy-to-systems-clipboard&#34;&gt;here&lt;/a&gt;
for the explanation.&lt;/p&gt;

&lt;p&gt;First a &lt;a href=&#34;https://github.com/IxDay/config_files/blob/new_conf/vimrc&#34;&gt;.vimrc&lt;/a&gt;,
the plugin system is based on
&lt;a href=&#34;https://github.com/gmarik/Vundle.vim&#34;&gt;Vundle&lt;/a&gt;. To install it just run
&lt;code&gt;git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim&lt;/code&gt;
and &lt;code&gt;vim +PluginInstall +qall&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I also use a global &lt;a href=&#34;https://github.com/IxDay/config_files/blob/new_conf/editorconfig&#34;&gt;editorconfig file&lt;/a&gt;
to keep tidy the maximum of files.&lt;/p&gt;

&lt;h2 id=&#34;a-name-xserver-i3-gtk-a-xserver-i3-and-gtk&#34;&gt;&lt;a name=&#34;xserver-i3-gtk&#34;&gt;&lt;/a&gt; Xserver, i3 and GTK&lt;/h2&gt;

&lt;p&gt;I use i3 for my window manager directly on top of X, all the configuration can
be found easily on my github, here are the files used to configure my desktop.
* The i3 config directory: &lt;a href=&#34;https://github.com/IxDay/config_files/tree/new_conf/i3&#34;&gt;here&lt;/a&gt;
* The i3status config file: &lt;a href=&#34;https://github.com/IxDay/config_files/blob/new_conf/i3status.conf&#34;&gt;here&lt;/a&gt;
* The gtkrc2 file: &lt;a href=&#34;https://github.com/IxDay/config_files/blob/new_conf/gtkrc-2.0&#34;&gt;here&lt;/a&gt;
* The settings.ini file for gtk3: &lt;a href=&#34;https://github.com/IxDay/config_files/blob/new_conf/gtkrc-2.0&#34;&gt;here&lt;/a&gt;
* The Xresource file: &lt;a href=&#34;https://github.com/IxDay/config_files/blob/new_conf/Xresources&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to launch X with i3 the following files are required in your home
directory:
* &lt;a href=&#34;https://github.com/IxDay/config_files/blob/new_conf/zprofile&#34;&gt;.zprofile&lt;/a&gt; is
the first file automatically sourced at the login, it launch the Xserver for
the session.
* &lt;a href=&#34;https://github.com/IxDay/config_files/blob/new_conf/xinitrc&#34;&gt;.xinitrc&lt;/a&gt;
contains the configuration for Xserver, it loads the keyboard layout,
initialize some properties from the &lt;code&gt;.Xresource&lt;/code&gt; file (colors, fonts, etc&amp;hellip;),
and finally load the i3 window manager.&lt;/p&gt;

&lt;p&gt;There is some issues with the dmenu provided by suckless-tools.
In order to support xft font I have reinstalled it from the minos repository,
mentionned &lt;a href=&#34;https://wiki.archlinux.org/index.php/Dmenu#Fonts&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;a-name-notification-a-notification&#34;&gt;&lt;a name=&#34;notification&#34;&gt;&lt;/a&gt;Notification&lt;/h3&gt;

&lt;p&gt;For the notifications I use dunst, which is a notification service, it is
started at i3 startup and will display in a configurable way the notifications
from the system. It needs &lt;code&gt;libnotify-bin&lt;/code&gt; to run, and has a
&lt;a href=&#34;https://github.com/IxDay/config_files/blob/new_conf/dunstrc&#34;&gt;configuration file&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;a-name-theming-a-theming&#34;&gt;&lt;a name=&#34;theming&#34;&gt;&lt;/a&gt;Theming&lt;/h3&gt;

&lt;p&gt;I have installed the &lt;a href=&#34;https://github.com/horst3180/Vertex-theme&#34;&gt;Vertex theme&lt;/a&gt;,
and the &lt;a href=&#34;https://github.com/IxDay/config_files/blob/new_conf/AwOken-2.5.zip&#34;&gt;Awoken White icon pack&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For the last one some packages are required in order to configure it correctly:
* imagemagick
* zenity&lt;/p&gt;

&lt;p&gt;I also use &lt;code&gt;feh&lt;/code&gt; for managing the desktop wallpaper, it is launched at the
Xserver startup from the &lt;code&gt;.xinitrc&lt;/code&gt; file.&lt;/p&gt;

&lt;h2 id=&#34;a-name-git-a-git&#34;&gt;&lt;a name=&#34;git&#34;&gt;&lt;/a&gt;git&lt;/h2&gt;

&lt;p&gt;The versionning tool!&lt;/p&gt;

&lt;p&gt;My configuration require here the two following files:
* &lt;a href=&#34;https://github.com/IxDay/config_files/blob/new_conf/gitconfig&#34;&gt;gitconfig&lt;/a&gt;
* &lt;a href=&#34;https://github.com/IxDay/config_files/blob/new_conf/gitconfig&#34;&gt;gitignore_global&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After copying those files you can create a rsa key:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ssh-keygen -t rsa -b &lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt; -C &lt;span class=&#34;s2&#34;&gt;&amp;quot;your_email@example.com&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And to manage the keys passphrase I use &lt;code&gt;keychain&lt;/code&gt; in an alias&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;alias &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;keychain_default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;eval &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;keychain --eval --agents ssh -Q --quiet id_rsa&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It is possible to configure multiple keys, in order to separate some services.
The archlinux wiki has a good article about the SSH keys management:
&lt;a href=&#34;https://wiki.archlinux.org/index.php/SSH_keys&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;a-name-google-chrome-a-google-chrome&#34;&gt;&lt;a name=&#34;google-chrome&#34;&gt;&lt;/a&gt;Google Chrome&lt;/h2&gt;

&lt;p&gt;Why Chrome, and not Chromium? I had a lot of issues with Chromium, on flash,
with google-talk and so on. It was too complicated and never works,
I wasn&amp;rsquo;t able to figure out why so I give up on this&lt;/p&gt;

&lt;h2 id=&#34;a-name-docker-a-docker&#34;&gt;&lt;a name=&#34;docker&#34;&gt;&lt;/a&gt;Docker&lt;/h2&gt;

&lt;p&gt;Docker is now vastly known by the community of developpers. For the moment,
I do not think it is a good production tool. But, for the development it is
awesome.&lt;/p&gt;

&lt;p&gt;Simply install the package and add your user to the docker group
&lt;code&gt;sudo gpasswd -a &amp;lt;your_user&amp;gt; docker&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Debian Install</title>
      <link>http://ixday.github.io/post/debian-install/</link>
      <pubDate>Sun, 12 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://ixday.github.io/post/debian-install/</guid>
      <description>

&lt;p&gt;That&amp;rsquo;s a fact: I can not install a new system without getting into troubles!&lt;/p&gt;

&lt;p&gt;So, here is a small tutorial in which I will aggregate the main issues I
encountered and how I solved them.&lt;/p&gt;

&lt;h3 id=&#34;creating-a-bootable-usb-key-on-a-mac&#34;&gt;Creating a bootable USB key on a Mac&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c&#34;&gt;# plug your USB key, then find it with&lt;/span&gt;
diskutil list

&lt;span class=&#34;c&#34;&gt;# unmount the usb key (it is mandatory), where X in diskX is the number assigned&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;# to your USB you retrieved with the previous command&lt;/span&gt;
diskutil unmountDisk /dev/diskX

&lt;span class=&#34;c&#34;&gt;# if you are making a bootable usb key for a Mac run this command,&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;# debian.img will be the output and debian-testing-amd64-CD-1.iso is&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;# the iso you retrieved from internet https://www.debian.org/CD/http-ftp/&lt;/span&gt;
hdiutil convert -format UDRW -o debian.img debian-testing-amd64-CD-1.iso

&lt;span class=&#34;c&#34;&gt;# if you are making a Mac bootable usb key (X is still the disk number)&lt;/span&gt;
sudo dd &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;./debian.img.dmg &lt;span class=&#34;nv&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/dev/rdiskX &lt;span class=&#34;nv&#34;&gt;bs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1m

&lt;span class=&#34;c&#34;&gt;# otherwise (X is still the disk number)&lt;/span&gt;
sudo dd &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;./debian-testing-amd64-CD-1.iso &lt;span class=&#34;nv&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/dev/rdiskX &lt;span class=&#34;nv&#34;&gt;bs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1m

&lt;span class=&#34;c&#34;&gt;# to finish eject&lt;/span&gt;
hdiutil eject /dev/diskX
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;messing-up-during-the-installation&#34;&gt;Messing up during the installation&lt;/h3&gt;

&lt;p&gt;I use to have a lot of issues during the installation, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No installable kernel&lt;/li&gt;
&lt;li&gt;Can not install grub&lt;/li&gt;
&lt;li&gt;Whatever can happen during the installation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, it is possible to fix that during the installation process.
At the final step, just before the reboot press ctrl+alt+f3, then when prompted
press enter and you will get into a shell. It is also possible to perform that
with the Advanced Options -&amp;gt; Rescue Mode.&lt;/p&gt;

&lt;p&gt;To fix the errors we will chroot into the new system and add the missing part by
hand.&lt;/p&gt;

&lt;h4 id=&#34;chroot-into-an-other-system&#34;&gt;Chroot into an other system&lt;/h4&gt;

&lt;p&gt;First find the partition on which your system has been installed&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c&#34;&gt;# parted will print you the partition of each device&lt;/span&gt;
parted /dev/sda print
parted /dev/sdb print
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once the partition is found you have to mount it&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c&#34;&gt;# create a directory for the mounted partition&lt;/span&gt;
mkdir /mnt/sda1

&lt;span class=&#34;c&#34;&gt;# mount it&lt;/span&gt;
mount /dev/sda1 /mnt/sda1

&lt;span class=&#34;c&#34;&gt;# bind the main parts&lt;/span&gt;
mount -o &lt;span class=&#34;nb&#34;&gt;bind&lt;/span&gt; /dev /mnt/sda1/dev
mount -o &lt;span class=&#34;nb&#34;&gt;bind&lt;/span&gt; /dev/pts /mnt/sda1/dev/pts
mount -o &lt;span class=&#34;nb&#34;&gt;bind&lt;/span&gt; /proc /mnt/sda1/proc
mount -o &lt;span class=&#34;nb&#34;&gt;bind&lt;/span&gt; /run /mnt/sda1/run
mount -o &lt;span class=&#34;nb&#34;&gt;bind&lt;/span&gt; /sys /mnt/sda1/sys

&lt;span class=&#34;c&#34;&gt;# chroot in the system&lt;/span&gt;
chroot /mnt/sda1 /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;dealing-with-the-system&#34;&gt;Dealing with the system&lt;/h4&gt;

&lt;p&gt;Actualize the file &lt;code&gt;/etc/apt/sources.list&lt;/code&gt; with the following
&lt;a href=&#34;http://debgen.simplylinux.ch/&#34;&gt;site&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c&#34;&gt;# update&lt;/span&gt;
apt-get update

&lt;span class=&#34;c&#34;&gt;# install the kernel, for me it is an amd64 architecture, to find yours just run&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;# apt-cache search linux-image and choose the one for your needs&lt;/span&gt;
apt-get install linux-image-amd64

&lt;span class=&#34;c&#34;&gt;# install grub2, when installing it will ask for the device on which you want&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;# grub to be installed, choose the device not the partition, here it will be&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;# /dev/sda&lt;/span&gt;
apt-get install grub2

&lt;span class=&#34;c&#34;&gt;# update grub just in case&lt;/span&gt;
update-grub

&lt;span class=&#34;c&#34;&gt;# do not forget to initialize the password&lt;/span&gt;
passwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;First step is done, and you will now be able to boot on your new system&lt;/p&gt;

&lt;h3 id=&#34;rebooting-and-first-configuration&#34;&gt;Rebooting and first configuration&lt;/h3&gt;

&lt;h4 id=&#34;set-up-the-locales&#34;&gt;Set up the locales&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c&#34;&gt;# install the package&lt;/span&gt;
apt-get install locales

&lt;span class=&#34;c&#34;&gt;# set the variables up, select the ones you want with space&lt;/span&gt;
dpkg-reconfigure locales
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;set-up-the-keyboard&#34;&gt;Set up the keyboard&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c&#34;&gt;# install the package&lt;/span&gt;
apt-get install console-data

&lt;span class=&#34;c&#34;&gt;# for me it is a french keyboard&lt;/span&gt;
loadkeys fr-latin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Test if the configuration works for you, then you can save it by adding to
&lt;code&gt;/etc/rc.locals&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c&#34;&gt;# the path to the keymap is displayed when you use the loadkeys command&lt;/span&gt;
/usr/bin/loadkeys /usr/share/keymaps/i386/azerty/fr-latin9.kmap.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;a-name-users-a-users&#34;&gt;&lt;a name=&#34;users&#34;&gt;&lt;/a&gt;Users&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c&#34;&gt;# install sudo&lt;/span&gt;
apt-get install sudo

&lt;span class=&#34;c&#34;&gt;# add new user called foo with a home folder (-m),&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;# users as first group (-g group_name), sudo as additionnal group (-G group_name)&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;# and bash as login shell&lt;/span&gt;
useradd -m -g users -G sudo -s /bin/bash foo

&lt;span class=&#34;c&#34;&gt;# change user password&lt;/span&gt;
passwd foo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;display-manager&#34;&gt;Display Manager&lt;/h3&gt;

&lt;p&gt;Here I will use i3 on top of xorg&lt;/p&gt;

&lt;h4 id=&#34;init&#34;&gt;Init&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c&#34;&gt;# install xorg and i3&lt;/span&gt;
apt-get install xorg i3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Create a file at the root of the user &lt;code&gt;~/.bash_profile&lt;/code&gt; if you are using bash
&lt;code&gt;~/.zprofile&lt;/code&gt; if using zsh, if you have another login shell please refer to the
dedicated doc.&lt;/p&gt;

&lt;p&gt;In our configuration it will be bash due to the &lt;a href=&#34;#users&#34;&gt;user creation&lt;/a&gt;.
Add &lt;code&gt;startx&lt;/code&gt; at any point of the file. This will launch xserver at login.
Then we want to launch i3. To do that add &lt;code&gt;exec i3&lt;/code&gt; at any point of the file
&lt;code&gt;~/.xinitrc&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;set-x-keyboard-layout&#34;&gt;Set X keyboard layout&lt;/h4&gt;

&lt;p&gt;To have the correct layout for X add the above commands in your &lt;code&gt;.xinitrc&lt;/code&gt; file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c&#34;&gt;# reset the options&lt;/span&gt;
setxkbmap -option

&lt;span class=&#34;c&#34;&gt;# I only add the option to quit X by pressing ctrl+alt+backspace&lt;/span&gt;
setxkbmap -layout fr -variant latin9 -option terminate:ctrl_alt_bksp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To see all available options you can type &lt;code&gt;localectl list-x11-keymap-options&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To see current configuration type &lt;code&gt;setxkbmap -query&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Here is the basic configuration for my linux. Trying to allocate the main issues
I had.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>