<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tests on Not today...</title>
    <link>http://ixday.github.io/tags/tests/</link>
    <description>Recent content in tests on Not today...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 16 Mar 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://ixday.github.io/tags/tests/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Pytest command line</title>
      <link>http://ixday.github.io/post/pytest_command_line/</link>
      <pubDate>Wed, 16 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://ixday.github.io/post/pytest_command_line/</guid>
      <description>I have recently dug into pytest documentation, and moreover into the command line arguments and I finally found a better workflow for running tests while I develop.
Here is the command I run when I just made some devs: py.test -xvvvs --tb=line --pdb
 -x will stop execution on first failue, useful when debugging tests in order of appearance (recommended) -vvv will display current test path (reuasable in py.test), the path will avoid to rerun all the previous tests before going to the one you are currently working on.</description>
    </item>
    
    <item>
      <title>Test promises with jasmine</title>
      <link>http://ixday.github.io/post/jasmine_promises/</link>
      <pubDate>Thu, 30 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://ixday.github.io/post/jasmine_promises/</guid>
      <description>Jasmine is a good testing framework, which I really like, it is really powerfull and has just the amount of features to perform a huge variety of tests.
At some point I had to tests promises, and more generally testing that some part of a function is not called (you will have to adapt the snippet but the idea is here).
It is pretty simple, but not well known (I checked some stackoverflow threads before finding this).</description>
    </item>
    
  </channel>
</rss>