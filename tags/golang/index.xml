<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Not today...</title>
    <link>http://ixday.github.io/tags/golang/</link>
    <description>Recent content in Golang on Not today...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Feb 2018 11:48:04 +0100</lastBuildDate>
    
	<atom:link href="http://ixday.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cancel copy of huge file in Go</title>
      <link>http://ixday.github.io/post/golang-cancel-copy/</link>
      <pubDate>Mon, 12 Feb 2018 11:48:04 +0100</pubDate>
      
      <guid>http://ixday.github.io/post/golang-cancel-copy/</guid>
      <description>I recently came across this video on Golang programming. I think this was the moment I finally fully understood the power of Go. It is smart, simple and elegant, I love it.
Then, a few days later, I was coding on a toy project and I was doing some stuff around the io package to copy huge files. I wanted to achieve copy cancelation during the processing, basically, being able to interrupt.</description>
    </item>
    
    <item>
      <title>golang err shadowing</title>
      <link>http://ixday.github.io/post/golang-err-shadowing/</link>
      <pubDate>Tue, 25 Jul 2017 10:44:02 +0200</pubDate>
      
      <guid>http://ixday.github.io/post/golang-err-shadowing/</guid>
      <description>A feature I like in golang is the hability to declare a variable at the assignation time. Something like this:
foo:=&amp;#34;bar&amp;#34;  Here the variable foo will automatically set up as a string with the value &amp;ldquo;bar&amp;rdquo;. One more feature is to be able to allocate on same line as doing a comparison. Like this:
iffoo:=&amp;#34;bar&amp;#34;;foo==&amp;#34;baz&amp;#34;{// do something }else{// do something else }  This is really handy when it comes to catch errors from an other function:</description>
    </item>
    
  </channel>
</rss>