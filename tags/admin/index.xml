<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>admin on Not today...</title>
    <link>http://ixday.github.io/tags/admin/</link>
    <description>Recent content in admin on Not today...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Dec 2018 15:46:28 +0100</lastBuildDate>
    
	<atom:link href="http://ixday.github.io/tags/admin/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Simple HTTPs server</title>
      <link>http://ixday.github.io/post/simple_https/</link>
      <pubDate>Tue, 11 Dec 2018 15:46:28 +0100</pubDate>
      
      <guid>http://ixday.github.io/post/simple_https/</guid>
      <description>Sometimes we need to create a simple server saying hello through https. Here is a simple snippet to achieve this in a shell.
# first we generate a self signed certificate for domain foo openssl req -new -newkey rsa:4096 -x509 -sha256 -days 365 -nodes \ -out foo.crt -keyout foo.key -subj &amp;quot;/CN=foo.com&amp;quot; # then we start a server using socat sudo socat &amp;quot;ssl-l:443,cert=foo.crt,key=foo.key,verify=0,fork,reuseaddr&amp;quot; \ SYSTEM:&amp;quot;echo HTTP/1.0 200; echo Content-Type\: text/plain; echo; echo Hello World\!</description>
    </item>
    
    <item>
      <title>Start libvirt VM as unprivileged user</title>
      <link>http://ixday.github.io/post/unprivileged_libvirt/</link>
      <pubDate>Mon, 01 May 2017 11:41:14 +0200</pubDate>
      
      <guid>http://ixday.github.io/post/unprivileged_libvirt/</guid>
      <description>Quick post for starting a VM inside libvirt as a non-root user. Also contains some useful snippets.
I want to start an alpine virt iso (from here) inside kvm through libvirt. But I am sick to run all my virsh commands prefixed with sudo.
DISCLAIMER: This will contain some of my conclusions with my partial understanding of those tools. I am quite sure that all of this can be improved, but I don&amp;rsquo;t have time to invest on this for the moment.</description>
    </item>
    
    <item>
      <title>Alpine iPXE</title>
      <link>http://ixday.github.io/post/alpine_ipxe/</link>
      <pubDate>Thu, 02 Feb 2017 10:08:35 +0100</pubDate>
      
      <guid>http://ixday.github.io/post/alpine_ipxe/</guid>
      <description>&lt;p&gt;For a personal project I want to iPXE boot alpine. I did not found any step by
step guide, so I ended up testing multiple solutions until it works. This
post is a &amp;ldquo;copy&amp;rdquo; of the answer I made &lt;a href=&#34;https://github.com/antonym/netboot.xyz/issues/30#issuecomment-276722892&#34;&gt;here&lt;/a&gt; for the &lt;a href=&#34;https://netboot.xyz&#34;&gt;netboot.xyz project&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To fix this issue I used a bunch of thread and resources but here are the three
main entry used:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux Mint 2</title>
      <link>http://ixday.github.io/post/linux_mint_2/</link>
      <pubDate>Mon, 08 Aug 2016 15:23:34 +0200</pubDate>
      
      <guid>http://ixday.github.io/post/linux_mint_2/</guid>
      <description>&lt;p&gt;I recently messed up my laptop (do not play with &lt;code&gt;/etc/apt/preferences&lt;/code&gt; too much!),
and I had to reinstall my distro. I checked my &lt;a href=&#34;http://ixday.github.io/post/linux_mint/&#34;&gt;previous article&lt;/a&gt;
and noticed some missing informations. So here is a second article of things
I needed to fixup when installing LMDE on my Macbook.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Libvirt through vagrant</title>
      <link>http://ixday.github.io/post/libvirt_through_vagrant/</link>
      <pubDate>Fri, 03 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>http://ixday.github.io/post/libvirt_through_vagrant/</guid>
      <description>I will not install VirtualBox! That&amp;rsquo;s all (nor VMWare, don&amp;rsquo;t be ridiculous). But I really like Vagrant, and use it every time I need something closer to a running machine. So, I dig up the internet and found that there is an unofficial support of libvirt.
Installation I do not remember where I found the documentation to do this or if I did it by myself, so no link here, just what I do in order to make this work.</description>
    </item>
    
    <item>
      <title>Gogs &#43; Drone</title>
      <link>http://ixday.github.io/post/gogs_drone_compose/</link>
      <pubDate>Thu, 12 May 2016 00:00:00 +0000</pubDate>
      
      <guid>http://ixday.github.io/post/gogs_drone_compose/</guid>
      <description>Jenkins is everywhere now, but I really don&amp;rsquo;t like it. So I am looking at a replacement from day to day. I discovered Gogs an I though that a CI is also a good use case for the Golang language.
And I finally found Drone (which was not really difficult as it is mentionned in a ticket on gogs github).
So I decided to make them work together in order to test that.</description>
    </item>
    
    <item>
      <title>Linux Mint</title>
      <link>http://ixday.github.io/post/linux_mint/</link>
      <pubDate>Mon, 22 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>http://ixday.github.io/post/linux_mint/</guid>
      <description>After a long journey, I finally found the distribution which fits all my need: Linux Mint Debian Edition
Why ?  It is based on debian a distribution which I really like (and not Ubuntu). The default tilling (similar to W7) is really comfortable. Lot of configuration can be done for shortcuts. Support for systemd (Yay \o/). Beautiful UI out of the box (which I didn&amp;rsquo;t have with TWM). And a lot more  Installation As I am on Macbook (once upon a time, I was young and dumb), I need a particular configuration of the partitions for the installation.</description>
    </item>
    
    <item>
      <title>Ansible</title>
      <link>http://ixday.github.io/post/ansible/</link>
      <pubDate>Sat, 03 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ixday.github.io/post/ansible/</guid>
      <description>I have a home media server, and I spent a lot of time configuring, testing and installing on it. But I was never really satisfied by the way I had to perform the installation (which happens way too often).
And I recently discovered Ansible, which is a tool for doing a lot of stuff with a server (configuration, run repetitive command, installation) over ssh.
I really loved experienced with it, it does not require a lot of dependencies on the targeted server, and can be easily run.</description>
    </item>
    
    <item>
      <title>Unable to find LVM volume... with LVM on top of Luks</title>
      <link>http://ixday.github.io/post/unable_to_find_lvm_volume_with_lvm_on_top_of_luks/</link>
      <pubDate>Wed, 19 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ixday.github.io/post/unable_to_find_lvm_volume_with_lvm_on_top_of_luks/</guid>
      <description>&lt;p&gt;Following &lt;a href=&#34;{filename}/2015-08-18.debian-install-2.md&#34;&gt;this article&lt;/a&gt;
I have LVM on top of Luks for my system.
When I boot I encounter the following message:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;  Volume group &amp;quot;vg_ssd&amp;quot; not found
  Skipping volume group vg_ssd
Unable to find LVM volume vg_ssd/lv_root
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It appears that LVM is started before I open the crypted partition and display this error.
To fix this we will manipulate the initramfs \o/.&lt;/p&gt;

&lt;p&gt;The issue is in the file &lt;code&gt;/usr/share/initramfs-tools/scripts/local-top/cryptroot&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>weechat</title>
      <link>http://ixday.github.io/post/weechat/</link>
      <pubDate>Thu, 16 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ixday.github.io/post/weechat/</guid>
      <description>Weechat is an ncurse client for IRC, which I use and have tweaked to fit my needs.
But Weechat have one major issue: IT IS NOT USER FRIENDLY. The documentation is poor, there is a lot of plugins, which documentation is even poorer, and the configuration is a hell.
WELCOME!
First of all the installation, apt-get install weechat will be sufficient on a real OS. Then, just type weechat in order to launch the client.</description>
    </item>
    
    <item>
      <title>Systemd-nspawn</title>
      <link>http://ixday.github.io/post/systemd_nspawn/</link>
      <pubDate>Tue, 19 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ixday.github.io/post/systemd_nspawn/</guid>
      <description>I am a huge fan of docker for my dev environments, it helps me keeping things clear and understanding what are the ressources needed for a project. A few month ago a friend told me that there already is a similar feature on Linux, and this feature is systemd-nspawn.
Creating your first container So like docker I wanted to first start a container. Nspawn has no environment so everything has to be done &amp;ldquo;by hand&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Small docker project</title>
      <link>http://ixday.github.io/post/small_tool/</link>
      <pubDate>Mon, 30 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ixday.github.io/post/small_tool/</guid>
      <description>I really like docker (even if I will look at systemd-nspawn), and also gulp. So I decided to create a small tool for serving a directory with a livereload.
The repo is available here
What I have learned  Docker, especially with boot2docker (I am on MacOSX shame on me), is not really flexible:
 no evaluation for environment variables you can not store a variable through multiple run, you will need to do a oneliner e.</description>
    </item>
    
    <item>
      <title>ssh, rsync and fswatch</title>
      <link>http://ixday.github.io/post/rsync_fswatch/</link>
      <pubDate>Mon, 02 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ixday.github.io/post/rsync_fswatch/</guid>
      <description>Sometimes I just can&amp;rsquo;t work on a local environment (particular architecture, particular services, local configuration too complex, etc&amp;hellip;). So, I have to synchronize my local directory with a remote one and test the web interface on my local machine.
ssh First, ssh! For this I need a ssh connection to the remote server, here I use a particular ssh key.
ssh -i ~/.ssh/my_ssh.key mylogin@192.168.0.1 # urls also work ssh -i ~/.</description>
    </item>
    
    <item>
      <title>Curl for REST</title>
      <link>http://ixday.github.io/post/curl_for_rest/</link>
      <pubDate>Wed, 07 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ixday.github.io/post/curl_for_rest/</guid>
      <description>It has been a long time since the last post. But today, I will just show two tools I use for debugging my REST APIs.
First one is the well known curl and the second one is jq.
One important feature of curl is its hability to load external files for datas with @ before file name:
curl -X POST -H &amp;quot;Content-Type: application/json&amp;quot; -d @filepath  Then you can remove the progress bar by adding -s in the options</description>
    </item>
    
    <item>
      <title>Debian Install</title>
      <link>http://ixday.github.io/post/debian-install/</link>
      <pubDate>Sun, 12 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://ixday.github.io/post/debian-install/</guid>
      <description>That&amp;rsquo;s a fact: I can not install a new system without getting into troubles!
So, here is a small tutorial in which I will aggregate the main issues I encountered and how I solved them.
Creating a bootable USB key on a Mac # plug your USB key, then find it with diskutil list # unmount the usb key (it is mandatory), where X in diskX is the number assigned # to your USB you retrieved with the previous command diskutil unmountDisk /dev/diskX # if you are making a bootable usb key for a Mac run this command, # debian.</description>
    </item>
    
  </channel>
</rss>